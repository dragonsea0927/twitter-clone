model Post {
  id                      String   @id @default(auto()) @map("_id") @db.ObjectId
  body                    String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  userId                  String   @db.ObjectId
  likedIds                String[] @db.ObjectId
  in_reply_to_screen_name String?
  in_reply_to_tweet_id    String?  @db.ObjectId
  image                   String?
  favorite_count          Int      @default(0)
  user                    User     @relation("UserPosts", fields: [userId], references: [id], onDelete: Cascade)

  media         Media[] @relation("Media")
  tweet_comment Post?   @relation("TweetComment", fields: [in_reply_to_tweet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments      Post[]  @relation("TweetComment")

  likes           Like[]      @relation("Like")
  Bookmarks       Bookmarks[] @relation("BookmarkPost")
  pinned_by_users User[]      @relation("PinnedTweet")
}

model Media {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  media_url  String
  media_type String
  media_path String
  tweet_id   String? @db.ObjectId
  tweet      Post?   @relation("Media", fields: [tweet_id], references: [id], onDelete: Cascade)
}